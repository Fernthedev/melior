(function() {var implementors = {};
implementors["melior"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"melior/ir/struct.Value.html\" title=\"struct melior::ir::Value\">Value</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"melior/ir/block/struct.Argument.html\" title=\"struct melior::ir::block::Argument\">Argument</a>&lt;'a&gt;","synthetic":false,"types":["melior::ir::block::argument::Argument"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"melior/ir/struct.Value.html\" title=\"struct melior::ir::Value\">Value</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"melior/ir/operation/struct.ResultValue.html\" title=\"struct melior::ir::operation::ResultValue\">ResultValue</a>&lt;'a&gt;","synthetic":false,"types":["melior::ir::operation::result::ResultValue"]},{"text":"impl&lt;'c&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"melior/ir/type/struct.Type.html\" title=\"struct melior::ir::type::Type\">Type</a>&lt;'c&gt;&gt; for <a class=\"struct\" href=\"melior/ir/type/struct.Function.html\" title=\"struct melior::ir::type::Function\">Function</a>&lt;'c&gt;","synthetic":false,"types":["melior::ir::type::function::Function"]},{"text":"impl&lt;'c&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"melior/ir/type/struct.Type.html\" title=\"struct melior::ir::type::Type\">Type</a>&lt;'c&gt;&gt; for <a class=\"struct\" href=\"melior/ir/type/struct.Tuple.html\" title=\"struct melior::ir::type::Tuple\">Tuple</a>&lt;'c&gt;","synthetic":false,"types":["melior::ir::type::tuple::Tuple"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()